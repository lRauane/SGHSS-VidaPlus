"""Generate table

Revision ID: 8411d3b4e410
Revises: 
Create Date: 2025-05-16 20:39:32.592935

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8411d3b4e410'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('senha', sa.String(length=255), nullable=False),
    sa.Column('telefone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('tipo', sa.Enum('ADMIN', 'PACIENTE', 'PROFISSIONAL', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('admin_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paciente_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cpf', sa.String(length=14), nullable=False),
    sa.Column('data_nascimento', sa.Date(), nullable=False),
    sa.Column('endereco', sa.String(length=255), nullable=False),
    sa.Column('complemento', sa.String(length=100), nullable=True),
    sa.Column('numero', sa.Integer(), nullable=False),
    sa.Column('bairro', sa.String(length=100), nullable=False),
    sa.Column('cidade', sa.String(length=100), nullable=False),
    sa.Column('estado', sa.String(length=2), nullable=False),
    sa.Column('cep', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_paciente_users_cpf'), 'paciente_users', ['cpf'], unique=True)
    op.create_table('profissional_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('crmCoren', sa.String(length=10), nullable=False),
    sa.Column('especialidade', sa.Enum('CLINICA_GERAL', 'DERMATOLOGIA', 'GINECOLOGIA', 'ORTOPEDIA', 'PEDIATRIA', 'PSIQUIATRIA', 'PSICOLOGIA', 'NUTRICAO', 'FISIOTERAPIA', 'ODONTOLOGIA', name='especialidade'), nullable=False),
    sa.Column('biografia', sa.String(length=255), nullable=True),
    sa.Column('horario_atendimento', sa.Enum('MANHA', 'TARDE', 'NOITE', 'INTEGRAL', 'PLANTAO_12H', 'PLANTAO_24H', name='horarioatendimento'), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_profissional_users_crmCoren'), 'profissional_users', ['crmCoren'], unique=True)
    op.create_table('prontuarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['paciente_id'], ['paciente_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consultas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('hora', sa.Time(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=False),
    sa.Column('profissional_id', sa.Integer(), nullable=False),
    sa.Column('prontuario_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('AGENDADA', 'REALIZADA', 'CANCELADA', 'NAO_COMPARECEU', 'REAGENDADA', 'PENDENTE', name='status'), nullable=False),
    sa.Column('tipoConsulta', sa.Enum('TELECONSULTA', 'PRESENCIAL', name='tipoconsulta'), nullable=False),
    sa.Column('link', sa.String(length=255), nullable=True),
    sa.Column('observacao', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['paciente_id'], ['paciente_users.id'], ),
    sa.ForeignKeyConstraint(['profissional_id'], ['profissional_users.id'], ),
    sa.ForeignKeyConstraint(['prontuario_id'], ['prontuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exames',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=False),
    sa.Column('prontuario_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('tipo', sa.Enum('HEMOGRAMA', 'RAIO_X', 'ULTRASSOM', 'TOMOGRAFIA', 'RESSONANCIA', 'ELETROCARDIOGRAMA', 'GLICEMIA', 'COLESTEROL', name='tipoexame'), nullable=False),
    sa.Column('resultado', sa.String(length=255), nullable=True),
    sa.Column('observacao', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('AGUARDANDO', 'REALIZADO', 'CONCLUIDO', 'CANCELADO', name='statusexame'), nullable=False),
    sa.ForeignKeyConstraint(['paciente_id'], ['paciente_users.id'], ),
    sa.ForeignKeyConstraint(['prontuario_id'], ['prontuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prescricoes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=False),
    sa.Column('profissional_id', sa.Integer(), nullable=False),
    sa.Column('prontuario_id', sa.Integer(), nullable=False),
    sa.Column('tipo_prescricao', sa.Enum('MEDICACAO_CONTINUA', 'MEDICACAO_TEMPORARIA', 'ANTIBIOTICO', 'ANALGESICO', 'RECEITA_ESPECIAL', name='tipoprescricao'), nullable=False),
    sa.Column('medicamentos', sa.String(length=255), nullable=False),
    sa.Column('observacao', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['paciente_id'], ['paciente_users.id'], ),
    sa.ForeignKeyConstraint(['profissional_id'], ['profissional_users.id'], ),
    sa.ForeignKeyConstraint(['prontuario_id'], ['prontuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prescricoes')
    op.drop_table('exames')
    op.drop_table('consultas')
    op.drop_table('prontuarios')
    op.drop_index(op.f('ix_profissional_users_crmCoren'), table_name='profissional_users')
    op.drop_table('profissional_users')
    op.drop_index(op.f('ix_paciente_users_cpf'), table_name='paciente_users')
    op.drop_table('paciente_users')
    op.drop_table('admin_users')
    op.drop_table('users')
    # ### end Alembic commands ###
